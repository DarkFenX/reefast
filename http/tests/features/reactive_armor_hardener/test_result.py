from tests import approx
from tests.features.reactive_armor_hardener import setup_rah


def test_complete_single(client, consts):
    eve_rah_info = setup_rah(client=client, consts=consts, ship_resos=(0.5, 0.65, 0.75, 0.9))
    client.create_sources()
    api_sol = client.create_sol()
    api_fit = api_sol.create_fit(rah_incoming_dmg=(1, 1, 1, 1))
    api_ship = api_fit.set_ship(type_id=eve_rah_info.ship_id)
    api_rah = api_fit.add_mod(type_id=eve_rah_info.rah_id, state=consts.ApiState.active)
    # Verification
    api_rah.update()
    assert api_rah.attrs[eve_rah_info.res_em_attr_id].base == approx(0.85)
    assert api_rah.attrs[eve_rah_info.res_em_attr_id].dogma == approx(1)
    assert api_rah.attrs[eve_rah_info.res_therm_attr_id].base == approx(0.85)
    assert api_rah.attrs[eve_rah_info.res_therm_attr_id].dogma == approx(0.925)
    assert api_rah.attrs[eve_rah_info.res_kin_attr_id].base == approx(0.85)
    assert api_rah.attrs[eve_rah_info.res_kin_attr_id].dogma == approx(0.82)
    assert api_rah.attrs[eve_rah_info.res_expl_attr_id].base == approx(0.85)
    assert api_rah.attrs[eve_rah_info.res_expl_attr_id].dogma == approx(0.655)
    api_ship.update()
    assert api_ship.attrs[eve_rah_info.res_em_attr_id].dogma == approx(0.5)
    assert api_ship.attrs[eve_rah_info.res_therm_attr_id].dogma == approx(0.60125)
    assert api_ship.attrs[eve_rah_info.res_kin_attr_id].dogma == approx(0.615)
    assert api_ship.attrs[eve_rah_info.res_expl_attr_id].dogma == approx(0.5895)


def test_complete_double_synced(client, consts):
    eve_rah_info = setup_rah(client=client, consts=consts, ship_resos=(0.5, 0.65, 0.75, 0.9))
    client.create_sources()
    api_sol = client.create_sol()
    api_fit = api_sol.create_fit(rah_incoming_dmg=(1, 1, 1, 1))
    api_ship = api_fit.set_ship(type_id=eve_rah_info.ship_id)
    api_rah1 = api_fit.add_mod(type_id=eve_rah_info.rah_id, state=consts.ApiState.active)
    api_rah2 = api_fit.add_mod(type_id=eve_rah_info.rah_id, state=consts.ApiState.active)
    # Verification
    api_rah1.update()
    assert api_rah1.attrs[eve_rah_info.res_em_attr_id].base == approx(0.85)
    assert api_rah1.attrs[eve_rah_info.res_em_attr_id].dogma == approx(0.97)
    assert api_rah1.attrs[eve_rah_info.res_therm_attr_id].base == approx(0.85)
    assert api_rah1.attrs[eve_rah_info.res_therm_attr_id].dogma == approx(0.88)
    assert api_rah1.attrs[eve_rah_info.res_kin_attr_id].base == approx(0.85)
    assert api_rah1.attrs[eve_rah_info.res_kin_attr_id].dogma == approx(0.805)
    assert api_rah1.attrs[eve_rah_info.res_expl_attr_id].base == approx(0.85)
    assert api_rah1.attrs[eve_rah_info.res_expl_attr_id].dogma == approx(0.745)
    api_rah2.update()
    assert api_rah2.attrs[eve_rah_info.res_em_attr_id].base == approx(0.85)
    assert api_rah2.attrs[eve_rah_info.res_em_attr_id].dogma == approx(0.97)
    assert api_rah2.attrs[eve_rah_info.res_therm_attr_id].base == approx(0.85)
    assert api_rah2.attrs[eve_rah_info.res_therm_attr_id].dogma == approx(0.88)
    assert api_rah2.attrs[eve_rah_info.res_kin_attr_id].base == approx(0.85)
    assert api_rah2.attrs[eve_rah_info.res_kin_attr_id].dogma == approx(0.805)
    assert api_rah2.attrs[eve_rah_info.res_expl_attr_id].base == approx(0.85)
    assert api_rah2.attrs[eve_rah_info.res_expl_attr_id].dogma == approx(0.745)
    api_ship.update()
    assert api_ship.attrs[eve_rah_info.res_em_attr_id].dogma == approx(0.472354)
    assert api_ship.attrs[eve_rah_info.res_therm_attr_id].dogma == approx(0.512344)
    assert api_ship.attrs[eve_rah_info.res_kin_attr_id].dogma == approx(0.501427)
    assert api_ship.attrs[eve_rah_info.res_expl_attr_id].dogma == approx(0.5219)


def test_complete_double_unsynced(client, consts):
    eve_rah_info = setup_rah(client=client, consts=consts, ship_resos=(0.5, 0.65, 0.75, 0.9))
    client.create_sources()
    api_sol = client.create_sol()
    api_fit = api_sol.create_fit(rah_incoming_dmg=(1, 1, 1, 1))
    api_ship = api_fit.set_ship(type_id=eve_rah_info.ship_id)
    api_rah1 = api_fit.add_mod(type_id=eve_rah_info.rah_id, state=consts.ApiState.active)
    api_rah2 = api_fit.add_mod(type_id=eve_rah_info.rah_id, state=consts.ApiState.overload)
    # Verification
    api_rah1.update()
    assert api_rah1.attrs[eve_rah_info.res_em_attr_id].base == approx(0.85)
    assert api_rah1.attrs[eve_rah_info.res_em_attr_id].dogma == approx(0.975294)
    assert api_rah1.attrs[eve_rah_info.res_therm_attr_id].base == approx(0.85)
    assert api_rah1.attrs[eve_rah_info.res_therm_attr_id].dogma == approx(0.835)
    assert api_rah1.attrs[eve_rah_info.res_kin_attr_id].base == approx(0.85)
    assert api_rah1.attrs[eve_rah_info.res_kin_attr_id].dogma == approx(0.829706)
    assert api_rah1.attrs[eve_rah_info.res_expl_attr_id].base == approx(0.85)
    assert api_rah1.attrs[eve_rah_info.res_expl_attr_id].dogma == approx(0.76)
    api_rah2.update()
    assert api_rah2.attrs[eve_rah_info.res_em_attr_id].base == approx(0.85)
    assert api_rah2.attrs[eve_rah_info.res_em_attr_id].dogma == approx(0.979)
    assert api_rah2.attrs[eve_rah_info.res_therm_attr_id].base == approx(0.85)
    assert api_rah2.attrs[eve_rah_info.res_therm_attr_id].dogma == approx(0.91)
    assert api_rah2.attrs[eve_rah_info.res_kin_attr_id].base == approx(0.85)
    assert api_rah2.attrs[eve_rah_info.res_kin_attr_id].dogma == approx(0.796)
    assert api_rah2.attrs[eve_rah_info.res_expl_attr_id].base == approx(0.85)
    assert api_rah2.attrs[eve_rah_info.res_expl_attr_id].dogma == approx(0.715)
    api_ship.update()
    assert api_ship.attrs[eve_rah_info.res_em_attr_id].dogma == approx(0.478747)
    assert api_ship.attrs[eve_rah_info.res_therm_attr_id].dogma == approx(0.500296)
    assert api_ship.attrs[eve_rah_info.res_kin_attr_id].dogma == approx(0.50864)
    assert api_ship.attrs[eve_rah_info.res_expl_attr_id].dogma == approx(0.509273)
